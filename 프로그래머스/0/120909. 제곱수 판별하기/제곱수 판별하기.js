function solution(n) {
    // n의 약수들을 저장할 배열을 초기화
    let arr = [];
    // 1부터 n까지 순회하면서 n의 약수를 찾기
    for(let i = 1; i <= n; i++) {
        // i가 n의 약수인지 확인
        if(n % i === 0){
            // i가 약수라면, n을 i로 나눈 몫도 약수이므로 배열에 추가
            arr.push(n / i);
        }
    }
    // 약수의 개수가 홀수이면 1(제곱수), 짝수이면 2(제곱수 아님)를 반환
    // 제곱수는 약수의 개수가 홀수개라는 수학적 성질을 이용
    return arr.length % 2 ? 1 : 2;
}